{"ast":null,"code":"import { useSlots, ref, computed } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nconst useCalendar = (props, emit, componentName) => {\n  const solts = useSlots();\n  const {\n    t,\n    lang\n  } = useLocale();\n  const selectedDay = ref();\n  const now = dayjs().locale(lang.value);\n  const realSelectedDay = computed({\n    get() {\n      if (!props.modelValue) return selectedDay.value;\n      return date.value;\n    },\n    set(val) {\n      if (!val) return;\n      selectedDay.value = val;\n      const result = val.toDate();\n      emit(INPUT_EVENT, result);\n      emit(UPDATE_MODEL_EVENT, result);\n    }\n  });\n  const validatedRange = computed(() => {\n    if (!props.range) return [];\n    const rangeArrDayjs = props.range.map(_ => dayjs(_).locale(lang.value));\n    const [startDayjs, endDayjs] = rangeArrDayjs;\n    if (startDayjs.isAfter(endDayjs)) {\n      debugWarn(componentName, \"end time should be greater than start time\");\n      return [];\n    }\n    if (startDayjs.isSame(endDayjs, \"month\")) {\n      return calculateValidatedDateRange(startDayjs, endDayjs);\n    } else {\n      if (startDayjs.add(1, \"month\").month() !== endDayjs.month()) {\n        debugWarn(componentName, \"start time and end time interval must not exceed two months\");\n        return [];\n      }\n      return calculateValidatedDateRange(startDayjs, endDayjs);\n    }\n  });\n  const date = computed(() => {\n    if (!props.modelValue) {\n      if (realSelectedDay.value) {\n        return realSelectedDay.value;\n      } else if (validatedRange.value.length) {\n        return validatedRange.value[0][0];\n      }\n      return now;\n    } else {\n      return dayjs(props.modelValue).locale(lang.value);\n    }\n  });\n  const prevMonthDayjs = computed(() => date.value.subtract(1, \"month\").date(1));\n  const nextMonthDayjs = computed(() => date.value.add(1, \"month\").date(1));\n  const prevYearDayjs = computed(() => date.value.subtract(1, \"year\").date(1));\n  const nextYearDayjs = computed(() => date.value.add(1, \"year\").date(1));\n  const i18nDate = computed(() => {\n    const pickedMonth = `el.datepicker.month${date.value.format(\"M\")}`;\n    return `${date.value.year()} ${t(\"el.datepicker.year\")} ${t(pickedMonth)}`;\n  });\n  const calculateValidatedDateRange = (startDayjs, endDayjs) => {\n    const firstDay = startDayjs.startOf(\"week\");\n    const lastDay = endDayjs.endOf(\"week\");\n    const firstMonth = firstDay.get(\"month\");\n    const lastMonth = lastDay.get(\"month\");\n    if (firstMonth === lastMonth) {\n      return [[firstDay, lastDay]];\n    } else if (firstMonth + 1 === lastMonth) {\n      const firstMonthLastDay = firstDay.endOf(\"month\");\n      const lastMonthFirstDay = lastDay.startOf(\"month\");\n      const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, \"week\");\n      const lastMonthStartDay = isSameWeek ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n      return [[firstDay, firstMonthLastDay], [lastMonthStartDay.startOf(\"week\"), lastDay]];\n    } else if (firstMonth + 2 === lastMonth || (firstMonth + 1) % 11 === lastMonth) {\n      const firstMonthLastDay = firstDay.endOf(\"month\");\n      const secondMonthFirstDay = firstDay.add(1, \"month\").startOf(\"month\");\n      const secondMonthStartDay = firstMonthLastDay.isSame(secondMonthFirstDay, \"week\") ? secondMonthFirstDay.add(1, \"week\") : secondMonthFirstDay;\n      const secondMonthLastDay = secondMonthStartDay.endOf(\"month\");\n      const lastMonthFirstDay = lastDay.startOf(\"month\");\n      const lastMonthStartDay = secondMonthLastDay.isSame(lastMonthFirstDay, \"week\") ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n      return [[firstDay, firstMonthLastDay], [secondMonthStartDay.startOf(\"week\"), secondMonthLastDay], [lastMonthStartDay.startOf(\"week\"), lastDay]];\n    } else {\n      debugWarn(componentName, \"start time and end time interval must not exceed two months\");\n      return [];\n    }\n  };\n  const pickDay = day => {\n    realSelectedDay.value = day;\n  };\n  const selectDate = type => {\n    const dateMap = {\n      \"prev-month\": prevMonthDayjs.value,\n      \"next-month\": nextMonthDayjs.value,\n      \"prev-year\": prevYearDayjs.value,\n      \"next-year\": nextYearDayjs.value,\n      today: now\n    };\n    const day = dateMap[type];\n    if (!day.isSame(date.value, \"day\")) {\n      pickDay(day);\n    }\n  };\n  useDeprecated({\n    from: '\"dateCell\"',\n    replacement: '\"date-cell\"',\n    scope: \"ElCalendar\",\n    version: \"2.3.0\",\n    ref: \"https://element-plus.org/en-US/component/calendar.html#slots\",\n    type: \"Slot\"\n  }, computed(() => !!solts.dateCell));\n  return {\n    calculateValidatedDateRange,\n    date,\n    realSelectedDay,\n    pickDay,\n    selectDate,\n    validatedRange,\n    t,\n    i18nDate\n  };\n};\nexport { useCalendar };","map":{"version":3,"mappings":"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","names":["useCalendar","props","emit","componentName","solts","useSlots","t","lang","useLocale","selectedDay","ref","now","dayjs","locale","value","realSelectedDay","computed","get","modelValue","date","set","val","result","toDate","INPUT_EVENT","UPDATE_MODEL_EVENT","validatedRange","range","rangeArrDayjs","map","_","startDayjs","endDayjs","isAfter","debugWarn","isSame","calculateValidatedDateRange","add","month","length","prevMonthDayjs","subtract","nextMonthDayjs","prevYearDayjs","nextYearDayjs","i18nDate","pickedMonth","format","year","firstDay","startOf","lastDay","endOf","firstMonth","lastMonth","firstMonthLastDay","lastMonthFirstDay","isSameWeek","lastMonthStartDay","secondMonthFirstDay","secondMonthStartDay","secondMonthLastDay","pickDay","day","selectDate","type","dateMap","today","useDeprecated","from","replacement","scope","version","dateCell"],"sources":["../../../../../../packages/components/calendar/src/use-calendar.ts"],"sourcesContent":["import { computed, ref, useSlots } from 'vue'\nimport dayjs from 'dayjs'\nimport { useDeprecated, useLocale } from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { ComputedRef, SetupContext } from 'vue'\nimport type { Dayjs } from 'dayjs'\nimport type { CalendarDateType, CalendarEmits, CalendarProps } from './calendar'\n\nexport const useCalendar = (\n  props: CalendarProps,\n  emit: SetupContext<CalendarEmits>['emit'],\n  componentName: string\n) => {\n  const solts = useSlots()\n  const { t, lang } = useLocale()\n\n  const selectedDay = ref<Dayjs>()\n  const now = dayjs().locale(lang.value)\n\n  const realSelectedDay = computed<Dayjs | undefined>({\n    get() {\n      if (!props.modelValue) return selectedDay.value\n      return date.value\n    },\n    set(val) {\n      if (!val) return\n      selectedDay.value = val\n      const result = val.toDate()\n\n      emit(INPUT_EVENT, result)\n      emit(UPDATE_MODEL_EVENT, result)\n    },\n  })\n\n  // if range is valid, we get a two-digit array\n  const validatedRange = computed(() => {\n    if (!props.range) return []\n    const rangeArrDayjs = props.range.map((_) => dayjs(_).locale(lang.value))\n    const [startDayjs, endDayjs] = rangeArrDayjs\n    if (startDayjs.isAfter(endDayjs)) {\n      debugWarn(componentName, 'end time should be greater than start time')\n      return []\n    }\n    if (startDayjs.isSame(endDayjs, 'month')) {\n      // same month\n      return calculateValidatedDateRange(startDayjs, endDayjs)\n    } else {\n      // two months\n      if (startDayjs.add(1, 'month').month() !== endDayjs.month()) {\n        debugWarn(\n          componentName,\n          'start time and end time interval must not exceed two months'\n        )\n        return []\n      }\n      return calculateValidatedDateRange(startDayjs, endDayjs)\n    }\n  })\n\n  const date: ComputedRef<Dayjs> = computed(() => {\n    if (!props.modelValue) {\n      if (realSelectedDay.value) {\n        return realSelectedDay.value\n      } else if (validatedRange.value.length) {\n        return validatedRange.value[0][0]\n      }\n      return now\n    } else {\n      return dayjs(props.modelValue).locale(lang.value)\n    }\n  })\n  const prevMonthDayjs = computed(() => date.value.subtract(1, 'month').date(1))\n  const nextMonthDayjs = computed(() => date.value.add(1, 'month').date(1))\n  const prevYearDayjs = computed(() => date.value.subtract(1, 'year').date(1))\n  const nextYearDayjs = computed(() => date.value.add(1, 'year').date(1))\n\n  const i18nDate = computed(() => {\n    const pickedMonth = `el.datepicker.month${date.value.format('M')}`\n    return `${date.value.year()} ${t('el.datepicker.year')} ${t(pickedMonth)}`\n  })\n\n  // https://github.com/element-plus/element-plus/issues/3155\n  // Calculate the validate date range according to the start and end dates\n  const calculateValidatedDateRange = (\n    startDayjs: Dayjs,\n    endDayjs: Dayjs\n  ): [Dayjs, Dayjs][] => {\n    const firstDay = startDayjs.startOf('week')\n    const lastDay = endDayjs.endOf('week')\n    const firstMonth = firstDay.get('month')\n    const lastMonth = lastDay.get('month')\n\n    // Current mouth\n    if (firstMonth === lastMonth) {\n      return [[firstDay, lastDay]]\n    }\n    // Two adjacent months\n    else if (firstMonth + 1 === lastMonth) {\n      const firstMonthLastDay = firstDay.endOf('month')\n      const lastMonthFirstDay = lastDay.startOf('month')\n\n      // Whether the last day of the first month and the first day of the last month is in the same week\n      const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, 'week')\n      const lastMonthStartDay = isSameWeek\n        ? lastMonthFirstDay.add(1, 'week')\n        : lastMonthFirstDay\n\n      return [\n        [firstDay, firstMonthLastDay],\n        [lastMonthStartDay.startOf('week'), lastDay],\n      ]\n    }\n    // Three consecutive months (compatible: 2021-01-30 to 2021-02-28)\n    else if (\n      firstMonth + 2 === lastMonth ||\n      (firstMonth + 1) % 11 === lastMonth\n    ) {\n      const firstMonthLastDay = firstDay.endOf('month')\n      const secondMonthFirstDay = firstDay.add(1, 'month').startOf('month')\n\n      // Whether the last day of the first month and the second month is in the same week\n      const secondMonthStartDay = firstMonthLastDay.isSame(\n        secondMonthFirstDay,\n        'week'\n      )\n        ? secondMonthFirstDay.add(1, 'week')\n        : secondMonthFirstDay\n\n      const secondMonthLastDay = secondMonthStartDay.endOf('month')\n      const lastMonthFirstDay = lastDay.startOf('month')\n\n      // Whether the last day of the second month and the last day of the last month is in the same week\n      const lastMonthStartDay = secondMonthLastDay.isSame(\n        lastMonthFirstDay,\n        'week'\n      )\n        ? lastMonthFirstDay.add(1, 'week')\n        : lastMonthFirstDay\n\n      return [\n        [firstDay, firstMonthLastDay],\n        [secondMonthStartDay.startOf('week'), secondMonthLastDay],\n        [lastMonthStartDay.startOf('week'), lastDay],\n      ]\n    }\n    // Other cases\n    else {\n      debugWarn(\n        componentName,\n        'start time and end time interval must not exceed two months'\n      )\n      return []\n    }\n  }\n\n  const pickDay = (day: Dayjs) => {\n    realSelectedDay.value = day\n  }\n\n  const selectDate = (type: CalendarDateType) => {\n    const dateMap: Record<CalendarDateType, Dayjs> = {\n      'prev-month': prevMonthDayjs.value,\n      'next-month': nextMonthDayjs.value,\n      'prev-year': prevYearDayjs.value,\n      'next-year': nextYearDayjs.value,\n      today: now,\n    }\n\n    const day = dateMap[type]\n\n    if (!day.isSame(date.value, 'day')) {\n      pickDay(day)\n    }\n  }\n\n  useDeprecated(\n    {\n      from: '\"dateCell\"',\n      replacement: '\"date-cell\"',\n      scope: 'ElCalendar',\n      version: '2.3.0',\n      ref: 'https://element-plus.org/en-US/component/calendar.html#slots',\n      type: 'Slot',\n    },\n    computed(() => !!solts.dateCell)\n  )\n\n  return {\n    calculateValidatedDateRange,\n    date,\n    realSelectedDay,\n    pickDay,\n    selectDate,\n    validatedRange,\n    t,\n    i18nDate,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}